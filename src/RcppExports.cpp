// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// grad_neg_loglik_A_j_conf_cpp
arma::vec grad_neg_loglik_A_j_conf_cpp(const arma::vec& response_j, const arma::vec& nonmis_ind_j, const arma::vec& A_j, const arma::vec& Q_j, const arma::mat& theta);
RcppExport SEXP _mirtjml_grad_neg_loglik_A_j_conf_cpp(SEXP response_jSEXP, SEXP nonmis_ind_jSEXP, SEXP A_jSEXP, SEXP Q_jSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type response_j(response_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nonmis_ind_j(nonmis_ind_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_j(A_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Q_j(Q_jSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_neg_loglik_A_j_conf_cpp(response_j, nonmis_ind_j, A_j, Q_j, theta));
    return rcpp_result_gen;
END_RCPP
}
// cjmle_conf_cpp
Rcpp::List cjmle_conf_cpp(const arma::mat& response, const arma::mat& nonmis_ind, arma::mat theta0, arma::mat A0, arma::mat Q, double cc, double tol, bool print_proc, bool parallel);
RcppExport SEXP _mirtjml_cjmle_conf_cpp(SEXP responseSEXP, SEXP nonmis_indSEXP, SEXP theta0SEXP, SEXP A0SEXP, SEXP QSEXP, SEXP ccSEXP, SEXP tolSEXP, SEXP print_procSEXP, SEXP parallelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type response(responseSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nonmis_ind(nonmis_indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A0(A0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type print_proc(print_procSEXP);
    Rcpp::traits::input_parameter< bool >::type parallel(parallelSEXP);
    rcpp_result_gen = Rcpp::wrap(cjmle_conf_cpp(response, nonmis_ind, theta0, A0, Q, cc, tol, print_proc, parallel));
    return rcpp_result_gen;
END_RCPP
}
// grad_neg_loglik_A_j_cpp
arma::vec grad_neg_loglik_A_j_cpp(const arma::vec& response_j, const arma::vec& nonmis_ind_j, const arma::vec& A_j, const arma::mat& theta);
RcppExport SEXP _mirtjml_grad_neg_loglik_A_j_cpp(SEXP response_jSEXP, SEXP nonmis_ind_jSEXP, SEXP A_jSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type response_j(response_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nonmis_ind_j(nonmis_ind_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_j(A_jSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_neg_loglik_A_j_cpp(response_j, nonmis_ind_j, A_j, theta));
    return rcpp_result_gen;
END_RCPP
}
// cjmle_expr_cpp
Rcpp::List cjmle_expr_cpp(const arma::mat& response, const arma::mat& nonmis_ind, arma::mat theta0, arma::mat A0, double cc, double tol, bool print_proc, bool parallel);
RcppExport SEXP _mirtjml_cjmle_expr_cpp(SEXP responseSEXP, SEXP nonmis_indSEXP, SEXP theta0SEXP, SEXP A0SEXP, SEXP ccSEXP, SEXP tolSEXP, SEXP print_procSEXP, SEXP parallelSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type response(responseSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nonmis_ind(nonmis_indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type A0(A0SEXP);
    Rcpp::traits::input_parameter< double >::type cc(ccSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type print_proc(print_procSEXP);
    Rcpp::traits::input_parameter< bool >::type parallel(parallelSEXP);
    rcpp_result_gen = Rcpp::wrap(cjmle_expr_cpp(response, nonmis_ind, theta0, A0, cc, tol, print_proc, parallel));
    return rcpp_result_gen;
END_RCPP
}
// prox_func_cpp
arma::vec prox_func_cpp(const arma::vec& y, double C);
RcppExport SEXP _mirtjml_prox_func_cpp(SEXP ySEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(prox_func_cpp(y, C));
    return rcpp_result_gen;
END_RCPP
}
// neg_loglik
double neg_loglik(const arma::mat& thetaA, const arma::mat& response, const arma::mat& nonmis_ind);
RcppExport SEXP _mirtjml_neg_loglik(SEXP thetaASEXP, SEXP responseSEXP, SEXP nonmis_indSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type thetaA(thetaASEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type response(responseSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type nonmis_ind(nonmis_indSEXP);
    rcpp_result_gen = Rcpp::wrap(neg_loglik(thetaA, response, nonmis_ind));
    return rcpp_result_gen;
END_RCPP
}
// neg_loglik_i_cpp
double neg_loglik_i_cpp(const arma::vec& response_i, const arma::vec& nonmis_ind_i, const arma::mat& A, const arma::vec& theta_i);
RcppExport SEXP _mirtjml_neg_loglik_i_cpp(SEXP response_iSEXP, SEXP nonmis_ind_iSEXP, SEXP ASEXP, SEXP theta_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type response_i(response_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nonmis_ind_i(nonmis_ind_iSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta_i(theta_iSEXP);
    rcpp_result_gen = Rcpp::wrap(neg_loglik_i_cpp(response_i, nonmis_ind_i, A, theta_i));
    return rcpp_result_gen;
END_RCPP
}
// grad_neg_loglik_thetai_cpp
arma::vec grad_neg_loglik_thetai_cpp(const arma::vec& response_i, const arma::vec& nonmis_ind_i, const arma::mat& A, const arma::vec& theta_i);
RcppExport SEXP _mirtjml_grad_neg_loglik_thetai_cpp(SEXP response_iSEXP, SEXP nonmis_ind_iSEXP, SEXP ASEXP, SEXP theta_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type response_i(response_iSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nonmis_ind_i(nonmis_ind_iSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type A(ASEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type theta_i(theta_iSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_neg_loglik_thetai_cpp(response_i, nonmis_ind_i, A, theta_i));
    return rcpp_result_gen;
END_RCPP
}
// neg_loglik_j_cpp
double neg_loglik_j_cpp(const arma::vec& response_j, const arma::vec& nonmis_ind_j, const arma::vec& A_j, const arma::mat& theta);
RcppExport SEXP _mirtjml_neg_loglik_j_cpp(SEXP response_jSEXP, SEXP nonmis_ind_jSEXP, SEXP A_jSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type response_j(response_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nonmis_ind_j(nonmis_ind_jSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type A_j(A_jSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(neg_loglik_j_cpp(response_j, nonmis_ind_j, A_j, theta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mirtjml_grad_neg_loglik_A_j_conf_cpp", (DL_FUNC) &_mirtjml_grad_neg_loglik_A_j_conf_cpp, 5},
    {"_mirtjml_cjmle_conf_cpp", (DL_FUNC) &_mirtjml_cjmle_conf_cpp, 9},
    {"_mirtjml_grad_neg_loglik_A_j_cpp", (DL_FUNC) &_mirtjml_grad_neg_loglik_A_j_cpp, 4},
    {"_mirtjml_cjmle_expr_cpp", (DL_FUNC) &_mirtjml_cjmle_expr_cpp, 8},
    {"_mirtjml_prox_func_cpp", (DL_FUNC) &_mirtjml_prox_func_cpp, 2},
    {"_mirtjml_neg_loglik", (DL_FUNC) &_mirtjml_neg_loglik, 3},
    {"_mirtjml_neg_loglik_i_cpp", (DL_FUNC) &_mirtjml_neg_loglik_i_cpp, 4},
    {"_mirtjml_grad_neg_loglik_thetai_cpp", (DL_FUNC) &_mirtjml_grad_neg_loglik_thetai_cpp, 4},
    {"_mirtjml_neg_loglik_j_cpp", (DL_FUNC) &_mirtjml_neg_loglik_j_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_mirtjml(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
